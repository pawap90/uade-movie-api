securityDefinitions:
  APIKeyHeader:
    type: apiKey
    in: header
    name: Authorization

paths:
  /list:
    post:
      security:
        - APIKeyHeader: []
      tags:
        - List
      summary: Posts a list
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          example:
            isDefault: false
            name: "List's name"
            isPublic: true
            mediaItems:
              [
                {
                  type: "movie",
                  id: 111,
                  title: "A night at the mauseleum",
                  description: "the remake of a night at the museum, but low budget",
                  imagePath: "thismyurl.com/image.png",
                  genres: ["thriller", "comedie", "low-budget"],
                  year: 2020,
                },
                {
                  type: "movie",
                  id: 222,
                  title: "pink floyd",
                  description: "that movie i cant remember the name where the hammers walk",
                  imagePath: "willthisgetanimage.com/image.png",
                  genres: ["Drama", "Philossophy", "Psychedelich"],
                  year: 1998,
                },
              ]
      responses:
        200:
          description: List was created succesfuly
        401:
          description: Authorization token was not provided
        500:
          description: There was an unexpected error creating the list
    get:
      security:
        - APIKeyHeader: []
      tags:
        - List
      summary: Gets users lists
      produces:
        - application/json
      responses:
        200:
          description: List were obtained succesfuly
        401:
          description: Authorization token not provided
        500:
          description: Unexpected error retrieving the user's lists
  /list/{listId}:
    delete:
      security:
        - APIKeyHeader: []
      tags:
        - List
      summary: Delete a list using its id
      produces:
        - application/json
      parameters:
        - in: path
          name: listId
          required: true
          description: The list identifier
          schema:
            type: string
      responses:
        200:
          description: List was deleted succesfuly
        401:
          description: Resource doesnt exist or you dont have access to it
        500:
          description: Unexpected error retrieving the user's lists
    put:
      security:
        - APIKeyHeader: []
      tags:
        - List
      summary: Put a list using its id
      produces:
        - application/json
      parameters:
        - in: path
          name: listId
          required: true
          description: The list identifier
          schema:
            type: string
        - in: body
          name: body
          required: true
          example:
            isDefault: false
            name: "My name is new"
            isPublic: true
            mediaItems: [
              {
                type: "This was updated",
                title: "New Title",
                genres: ["This was updated", "comedie", "low-budget"],
              },
              {
                type: "This was updated",
                title: "New Title",
                genres: ["This was updated", "Philossophy", "Psychedelich"],
              }
            ]
      responses:
        200:
          description: List was updated succesfuly
        401:
          description: Resource doesnt exist or you dont have access to it
        500:
          description: Unexpected error retrieving the user's lists
  /list/{listId}/item:
  post:
    security:
      - APIKeyHeader: []
    tags:
      - List
    summary: Adds item to the specified list
    produces:
      - application/json
    parameters:
      - in: path
        name: listId
        required: true
        description: The list identifier
        schema:
          type: string
      - in: body
        name: body
        required: true
        example:
          {
            type: "movie",
            id: 111,
            title: "A night at the mauseleum",
            description: "the remake of a night at the museum, but low budget",
            imagePath: "thismyurl.com/image.png",
            genres: ["thriller", "comedie", "low-budget"],
            year: 2020,
          }
    responses:
      200:
        description: Item was added succesfuly
      401:
        description: Authorization token was not provided
      500:
        description: There was an unexpected error adding item to the default list
